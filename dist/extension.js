module.exports=(()=>{"use strict";var e={441:function(e,t,n){var i=this&&this.__awaiter||function(e,t,n,i){return new(n||(n=Promise))((function(o,r){function s(e){try{c(i.next(e))}catch(e){r(e)}}function a(e){try{c(i.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.SidebarProvider=void 0;const o=n(549),r=n(686);t.SidebarProvider=class{constructor(e){this._extensionUri=e}resolveWebviewView(e){this._view=e,e.webview.options={enableScripts:!0,localResourceRoots:[this._extensionUri]},e.webview.html=this._getHtmlForWebview(e.webview),e.webview.onDidReceiveMessage((e=>i(this,void 0,void 0,(function*(){switch(e.type){case"push":if(!e.value)return;return o.commands.executeCommand("git.stageAll").then((()=>o.commands.executeCommand("git.commitStaged").then((()=>o.commands.executeCommand("git.sync").then((()=>{o.window.showInformationMessage("Changes pushed!")}))))));case"merge":if(!e.value)return;(yield o.commands.executeCommand("git.merge"))&&o.window.showInformationMessage("Merged");break;case"revertCommit":if(!e.value)return;(yield o.commands.executeCommand("git.revertCommit"))&&o.window.showInformationMessage("Reverted");break;case"onInfo":if(!e.value)return;o.window.showInformationMessage(e.value);break;case"onError":if(!e.value)return;o.window.showErrorMessage(e.value)}}))))}revive(e){this._view=e}_getHtmlForWebview(e){const t=e.asWebviewUri(o.Uri.joinPath(this._extensionUri,"media","reset.css")),n=e.asWebviewUri(o.Uri.joinPath(this._extensionUri,"media","vscode.css")),i=e.asWebviewUri(o.Uri.joinPath(this._extensionUri,"out","compiled/sidebar.js")),s=e.asWebviewUri(o.Uri.joinPath(this._extensionUri,"out","compiled/sidebar.css")),a=r.getNonce();return`<!DOCTYPE html>\n\t\t\t<html lang="en">\n\t\t\t<head>\n\t\t\t\t<meta charset="UTF-8">\n\t\t\t\t\x3c!--\n\t\t\t\t\tUse a content security policy to only allow loading images from https or from our extension directory,\n\t\t\t\t\tand only allow scripts that have a specific nonce.\n        --\x3e\n        <meta http-equiv="Content-Security-Policy" content="img-src https: data:; style-src 'unsafe-inline' ${e.cspSource}; script-src 'nonce-${a}';">\n\t\t\t\t<meta name="viewport" content="width=device-width, initial-scale=1.0">\n\t\t\t\t<link href="${t}" rel="stylesheet">\n\t\t\t\t<link href="${n}" rel="stylesheet">\n        <link href="${s}" rel="stylesheet">\n        <script nonce="${a}">\n          const tsvscode = acquireVsCodeApi();\n        <\/script>\n\t\t\t</head>\n      <body>\n\t\t\t\t<script nonce="${a}" src="${i}"><\/script>\n\t\t\t</body>\n\t\t\t</html>`}}},112:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.deactivate=t.activate=void 0;const i=n(549),o=n(441);t.activate=function(e){const t=new o.SidebarProvider(e.extensionUri);e.subscriptions.push(i.window.registerWebviewViewProvider("gitAllInOne-sidebar",t)),e.subscriptions.push(i.commands.registerCommand("gitAllInOne.helloWorld",(()=>{i.window.showInformationMessage("hello world")})))},t.deactivate=function(){}},686:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getNonce=void 0,t.getNonce=function(){let e="";const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let n=0;n<32;n++)e+=t.charAt(Math.floor(Math.random()*t.length));return e}},549:e=>{e.exports=require("vscode")}},t={};return function n(i){if(t[i])return t[i].exports;var o=t[i]={exports:{}};return e[i].call(o.exports,o,o.exports,n),o.exports}(112)})();